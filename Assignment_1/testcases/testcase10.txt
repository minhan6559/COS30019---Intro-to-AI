# Test Case 10: Large Graph for Scalability
# This test builds an extensive layered graph (y=1 through y=11) plus a top node at (4,12).
# It is designed to stress-test all search algorithms, particularly A* and Fringe.
# Both algorithms will ultimately find the same path and expand a similar number of nodes,
# but Fringe, with its iterative deepening approach, uses far less memory than A*.

Nodes:
1: (4,0)

# Row y=1 (node IDs 2..10)
2: (0,1)
3: (1,1)
4: (2,1)
5: (3,1)
6: (4,1)
7: (5,1)
8: (6,1)
9: (7,1)
10: (8,1)

# Row y=2 (node IDs 11..19)
11: (0,2)
12: (1,2)
13: (2,2)
14: (3,2)
15: (4,2)
16: (5,2)
17: (6,2)
18: (7,2)
19: (8,2)

# Row y=3 (node IDs 20..28)
20: (0,3)
21: (1,3)
22: (2,3)
23: (3,3)
24: (4,3)
25: (5,3)
26: (6,3)
27: (7,3)
28: (8,3)

# Row y=4 (node IDs 29..37)
29: (0,4)
30: (1,4)
31: (2,4)
32: (3,4)
33: (4,4)
34: (5,4)
35: (6,4)
36: (7,4)
37: (8,4)

# Row y=5 (node IDs 38..46)
38: (0,5)
39: (1,5)
40: (2,5)
41: (3,5)
42: (4,5)
43: (5,5)
44: (6,5)
45: (7,5)
46: (8,5)

# Row y=6 (node IDs 47..55)
47: (0,6)
48: (1,6)
49: (2,6)
50: (3,6)
51: (4,6)
52: (5,6)
53: (6,6)
54: (7,6)
55: (8,6)

# Row y=7 (node IDs 56..64)
56: (0,7)
57: (1,7)
58: (2,7)
59: (3,7)
60: (4,7)
61: (5,7)
62: (6,7)
63: (7,7)
64: (8,7)

# Row y=8 (node IDs 65..73)
65: (0,8)
66: (1,8)
67: (2,8)
68: (3,8)
69: (4,8)
70: (5,8)
71: (6,8)
72: (7,8)
73: (8,8)

# Row y=9 (node IDs 74..82)
74: (0,9)
75: (1,9)
76: (2,9)
77: (3,9)
78: (4,9)
79: (5,9)
80: (6,9)
81: (7,9)
82: (8,9)

# Row y=10 (node IDs 83..91)
83: (0,10)
84: (1,10)
85: (2,10)
86: (3,10)
87: (4,10)
88: (5,10)
89: (6,10)
90: (7,10)
91: (8,10)

# Row y=11 (node IDs 92..100)
92: (0,11)
93: (1,11)
94: (2,11)
95: (3,11)
96: (4,11)
97: (5,11)
98: (6,11)
99: (7,11)
100: (8,11)

# Final top node
101: (4,12)

Edges:
# 1 to row y=1: costs from edges to center: 5,4,3,2,1,2,3,4,5
(1,2): 5
(1,3): 4
(1,4): 3
(1,5): 2
(1,6): 1
(1,7): 2
(1,8): 3
(1,9): 4
(1,10): 5

(2,11): 1
(3,12): 1
(4,13): 1
(5,14): 1
(6,15): 1
(7,16): 1
(8,17): 1
(9,18): 1
(10,19): 1

(11,20): 1
(12,21): 1
(13,22): 1
(14,23): 1
(15,24): 1
(16,25): 1
(17,26): 1
(18,27): 1
(19,28): 1

(20,29): 1
(21,30): 1
(22,31): 1
(23,32): 1
(24,33): 1
(25,34): 1
(26,35): 1
(27,36): 1
(28,37): 1

(29,38): 1
(30,39): 1
(31,40): 1
(32,41): 1
(33,42): 1
(34,43): 1
(35,44): 1
(36,45): 1
(37,46): 1

(38,47): 1
(39,48): 1
(40,49): 1
(41,50): 1
(42,51): 1
(43,52): 1
(44,53): 1
(45,54): 1
(46,55): 1

(47,56): 1
(48,57): 1
(49,58): 1
(50,59): 1
(51,60): 1
(52,61): 1
(53,62): 1
(54,63): 1
(55,64): 1

(56,65): 1
(57,66): 1
(58,67): 1
(59,68): 1
(60,69): 1
(61,70): 1
(62,71): 1
(63,72): 1
(64,73): 1

(65,74): 1
(66,75): 1
(67,76): 1
(68,77): 1
(69,78): 1
(70,79): 1
(71,80): 1
(72,81): 1
(73,82): 1

(74,83): 1
(75,84): 1
(76,85): 1
(77,86): 1
(78,87): 1
(79,88): 1
(80,89): 1
(81,90): 1
(82,91): 1

(83,92): 1
(84,93): 1
(85,94): 1
(86,95): 1
(87,96): 1
(88,97): 1
(89,98): 1
(90,99): 1
(91,100): 1

(92,101): 5
(93,101): 4
(94,101): 3
(95,101): 2
(96,101): 1
(97,101): 2
(98,101): 3
(99,101): 4
(100,101): 5

Origin:
1

Destinations:
101
