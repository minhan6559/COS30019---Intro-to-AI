# Test Case 6: Cycle Handling Test
# Tests how search algorithms handle cycles without getting stuck
# Expected behavior:
# - Algorithms must avoid infinite loops by tracking visited nodes
# - DFS may explore deeper into the cycle before finding the goal
# - BFS, UCS, A*, GBFS, and Fringe should efficiently find the exit through node 14
# - Demonstrates the importance of proper cycle detection in search strategies

Nodes:
1: (2,0)
2: (3,1)
3: (4,2)
4: (5,2)
5: (6,2)
6: (7,2)
7: (7,3)
8: (7,4)
9: (7,5)
10: (6,5)
11: (5,5)
12: (4,5)
13: (4,4)
14: (4,3)
15: (0,3)

Edges:
(1,2): 2
(2,3): 2
(14,15): 4
(3,4): 1
(4,3): 1
(4,5): 1
(5,4): 1
(5,6): 1
(6,5): 1
(6,7): 1
(7,6): 1
(7,8): 1
(8,7): 1
(8,9): 1
(9,8): 1
(9,10): 1
(10,9): 1
(10,11): 1
(11,10): 1
(11,12): 1
(12,11): 1
(12,13): 1
(13,12): 1
(13,14): 1
(14,13): 1
(14,3): 1
(3,14): 1

Origin:
1

Destinations:
15
